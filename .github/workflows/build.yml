name: test

on: [ push, pull_request ]

env:
  REGISTRY: ghcr.io
  POKY_BRANCH: honister

jobs:
  build-docker-image:
    name: Build Docker image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{secrets.PKG_REGISTRY_USERNAME}}
          password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{env.REGISTRY}}/${{github.repository}}
      - run: echo "UID=$(id -u)" >> $GITHUB_ENV
      - run: echo "GID=$(id -g)" >> $GITHUB_ENV
      - uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          build-args: |
            UID=${{ env.UID }}
            GID=${{ env.GID }}
          tags: |
            ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
  fetch-yocto-dependencies:
    name: Fetch Yocto dependencies
    runs-on: ubuntu-20.04
    needs: build-docker-image
#    container:
#      # TODO: use the correct image here...
#      image: ghcr.io/sauci/plant-feeder:feature-3
#      credentials:
#        username: ${{secrets.PKG_REGISTRY_USERNAME}}
#        password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
#      volumes:
#        - ./build:/home/usersetup/build
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{secrets.PKG_REGISTRY_USERNAME}}
          password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      - run: mkdir build && docker run -v ./build:/home/usersetup/build ghcr.io/sauci/plant-feeder:feature-3 -c "cd /home/usersetup/sources/ && chmod +x fetch-dependencies.sh && ./fetch-dependencies.sh"
#      - run: |
#          cd /home/usersetup/sources/
#          chmod +x fetch-dependencies.sh
#          ./fetch-dependencies.sh
  build-yocto-image:
    name: Build Yocto image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ${GITHUB_WORKSPACE}/build
      - uses: jlumbroso/free-disk-space@v1.3.0
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - uses: actions/checkout@v3
      - run: mkdir build
      - run: chmod +x sources/prepare-yocto.sh
      - run: docker compose build --build-arg UID=$(id -u) --build-arg GID=$(id -g) rpi-image-build
      - run: docker compose run rpi-image-build
      - uses: actions/upload-artifact@v3
        with:
          name: images
          path: |
            build/tmp/deploy/images
