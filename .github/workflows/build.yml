name: test

on: [ push, pull_request ]

env:
  REGISTRY: ghcr.io
  POKY_BRANCH: honister

jobs:
  build-docker-image:
    name: Build Docker image
    runs-on: ubuntu-20.04
    outputs:
      docker-image-tag: ${{ steps.export-docker-image-tag.outputs.DOCKER_IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{secrets.PKG_REGISTRY_USERNAME}}
          password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{env.REGISTRY}}/${{github.repository}}
      - id: export-docker-image-tag
        run: echo "DOCKER_IMAGE_TAG=${{steps.meta.outputs.tags}}" >> $GITHUB_OUTPUT
      - run: echo "UID=$(id -u)" >> $GITHUB_ENV
      - run: echo "GID=$(id -g)" >> $GITHUB_ENV
      - uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          build-args: |
            UID=${{ env.UID }}
            GID=${{ env.GID }}
          tags: |
            ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
  fetch-yocto-dependencies:
    name: Fetch Yocto dependencies
    runs-on: ubuntu-20.04
    needs: build-docker-image
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{secrets.PKG_REGISTRY_USERNAME}}
          password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      - run: mkdir build && docker run -v ./build:/home/usersetup/build ${{ needs.build-docker-image.outputs.docker-image-tag }} -c "cd /home/usersetup/sources/ && chmod +x fetch-dependencies.sh && ./fetch-dependencies.sh"
      - uses: actions/cache@v3
        with:
          path: build/cache
          key: cache-yocto-fetch
  build-yocto-image:
    name: Build Yocto image
    runs-on: ubuntu-20.04
    needs:
      - build-docker-image
      - fetch-yocto-dependencies
    steps:
      - uses: jlumbroso/free-disk-space@v1.3.0
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - uses: actions/cache@v3
        with:
          path: build/cache
          key: cache-yocto-fetch
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{secrets.PKG_REGISTRY_USERNAME}}
          password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      - run: mkdir build && docker run -v ./build:/home/usersetup/build ${{ needs.build-docker-image.outputs.docker-image-tag }} -c "cd /home/usersetup/sources/ && chmod +x build-image.sh && ./build-image.sh"
      - uses: actions/upload-artifact@v3
        with:
          name: images
          path: |
            build/tmp/deploy/images
